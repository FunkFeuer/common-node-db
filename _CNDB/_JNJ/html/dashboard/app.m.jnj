{#- jinja template: html/dashboard/app.m.jnj -#}
{#
## Copyright (C) 2014-2015 Mag. Christian Tanzer All rights reserved
## Glasauergasse 32, A--1130 Wien, Austria. tanzer@swing.co.at
## #*** <License> ************************************************************
## This module is licensed under the terms of the BSD 3-Clause License
## <http://www.c-tanzer.at/license/bsd_3c.html>.
## #*** </License> ***********************************************************#
##
##++
## Name
##    html/dashboard/app.m.jnj
##
## Purpose
##    Template macros for CNDB dashboard
##
## Revision Dates
##    10-Apr-2014 (CT) Creation
##    13-Apr-2014 (CT) Factor `entity_actions`
##    14-Apr-2014 (CT) Factor `action_button`, `nav_menu_links`,
##                     `nav_menu_person`, `th_number_of`
##    14-Apr-2014 (CT) Restructure to show all instances of each type
##    18-Apr-2014 (CT) Generalize `e_type_table` (use `db_type.view_actions`...)
##    18-Apr-2014 (CT) Factor `db_div_main`
##    19-Apr-2014 (CT) Use `db_type.app_div_id`
##     2-May-2014 (CT) Add `logout_widget` to render `form`
##     3-May-2014 (CT) Add `db_node_map`
##     4-May-2014 (CT) Add `db_graph`
##     5-May-2014 (CT) Add `nav_menu_dashboard`;
##                     honor `user` in `nav_menu_person` and `nav_menu_links`
##     5-May-2014 (CT) Add guard to `db_node_map`, use `db_node.position`
##    11-Jul-2014 (CT) Add guard for `pos` to `db_node_map`
##    20-Aug-2014 (CT) Add missing space to `th` of `e_type_table`
##     2-Sep-2014 (MB) Fix tile url of map
##     3-Sep-2014 (MB) Store markers in an object
##                     Move map to js
##     3-Sep-2014 (MB) If column owner exists, check if owner of object is
##                     Logged in user and show checkmark (or empty circle)
##     3-Sep-2014 (CT) Factor `action_button_create`, support `is_partial`
##     5-Sep-2014 (CT) Rewrite `owner` column code to improve readability
##                     (and placate emacs syntax colorizer :-)
##    16-Sep-2014 (CT) Add `action_button_allocate_ip_pool_menu`
##    16-Sep-2014 (CT) Change action messages to dict-interpolation
##    16-Sep-2014 (CT) Factor `e_type_object`
##    23-Sep-2014 (CT) Use `ui_display_x` in
##                     `action_button_allocate_ip_pool_menu`
##    26-Sep-2014 (CT) Fix documentation URL
##    26-Sep-2014 (CT) Move `.owner` into if-clause
##     3-Dec-2014 (CT) Adapt to changes in grid of pure-0.5.0
##    16-Dec-2014 (CT) Fix guard for `o.position` in `db_node_map`;
##                     remove unnecessary whitespace from `data-markers`
##    16-Dec-2014 (CT) Fix `own_title`
##    27-Jan-2015 (CT) Remove home-grown code for `owner` from `e_type_object`
##     3-Feb-2015 (CT) Adapt to changes of `GTW.RST.TOP.MOM.Field`
##    18-Mar-2015 (CT) Add guard for `objects` to `e_type_table`
##     7-Apr-2015 (CT) Add `data-etn` to `e_type_object` if `db_type.is_partial`
##    ««revision-date»»···
##--
#}

{%- macro action_button
    ( href, icon_name
    , title     = None
    , a_cls     = "pure-button"
    , i_add_cls = None
    , text      = ""
    )
-%}
  {%- set i_cls = "fa fa-%s" % (icon_name, ) %}
  {%- if i_add_cls %}
    {%- set i_cls = "%s %s" % (i_cls, i_add_cls) %}
  {% endif -%}
  <a class="{{ a_cls}}" href="{{ href }}"{{ kwargs|xmlattr }}
     {%- if title %} title="{{ title }}"{% endif -%}
  ><i class="{{ i_cls }}"></i>{{ text }}</a>
{%- endmacro -%} {#- action_button -#}

{%- macro action_button_create (db_type, create) -%}
  {%- set ET          = db_type.E_Type %}
  {%- set kw          = GTW.dict (kwargs) %}
  {%- set a_cls       = kw.get ("a_cls", "pure-button") %}
  {%- set action_name = create.name %}
  {%- onion db_type.is_partial %}
    {%- head %}
      {%- set action_name = action_name + "-partial" %}
      {%- do kw.update (a_cls = " ".join ((a_cls, "partial-type"))) %}
    {%- body %}
      {{- action_button ("#" + action_name, create.icon, ** kw) -}}
    {%- tail %}
      <ul class="partial-type-menu">
        {%- for c_db_type in db_type.children_np %}
          <li>
            {%- set TN = c_db_type.E_Type.ui_name_T %}
            {%- set msg = (GTW._T (create.msg) % GTW.dict (tn = TN, obj = "")).strip () %}
            {%- set kw = GTW.dict
                ( kwargs
                , text  = TN
                , title = msg
                , ** { "data-etn" : c_db_type.name }
                )
            %}
            {{- action_button ("#" + create.name + "-type", "play", ** kw)
            -}}
          </li>
        {% endfor -%}
      </ul>
    {%- endonion %}
{%- endmacro -%} {#- action_button_create -#}

{%- macro action_button_allocate_ip_pool_menu (db_type, pools) -%}
  <ul class="partial-type-menu">
    {%- for p in pools %}
      <li>
        {%- set nam = p.ui_display_x %}
        {%- set msg =
                GTW._T ("Allocate from pool %(name)s") % GTW.dict (name=nam)
        %}
        {%- set kw  = GTW.dict
            ( kwargs
            , text  = nam [:40]
            , title = msg
            , ** { "data-pool-pid" : p.pid }
            )
        %}
        {{- action_button ("#allocate_ip", "play", ** kw)
        -}}
      </li>
    {% endfor -%}
  </ul>
{%- endmacro -%} {#- action_button_allocate_ip_pool_menu -#}

{%- macro db_div_main (db_div) -%}
  {%- for db_type in db_div.entries %}
    <section id="{{ db_type.app_div_id }}" class="{{ db_type.app_div_class }}">
      {{ DB.e_type_table (db_type) }}
    </section>
    {% if db_type.xtra_template_macro %}
      {{ GTW.call_macro (db_type.xtra_template_macro, db_type) }}
    {% endif %}
  {% endfor -%}
{%- endmacro -%} {#- db_div_main -#}

{%- macro db_graph (db_type) -%}
  {%- set tn  = db_type.div_name %}
  <div class="pure-u-1 graph" id="{{ tn }}-graph">
  </div>
{%- endmacro -%} {#- db_graph -#}

{%- macro db_node_map (db_type) -%}
  {%- if db_type.objects %}
    {%- set pos = db_type.position %}
    {%- set tn  = db_type.div_name %}
    {%- set nn  = GTW.len (db_type.objects) %}
    {%- if pos %}
      <div class="pure-u-1 pure-u-md-1-2">
        <div id="{{ tn }}-map" {# -#}
             class="map" {# -#}
             style="height: {{ 3 * (nn + 1) -}}rem; margin-top: 5rem;"{# -#}

             data-markers='[
          {%- for o in db_type.objects if o.position and o.position.lat and o.position.lon -%}
            {%- set pos = o.position -%}
            { "pid": {{ o.pid -}}
            , "pos": {# -#}
                { "lat": {{ pos.lat -}}
                , "lon": {{ pos.lon }} {# -#}
                }{#- -#}
            , "name": "{{ o.name }}" {# -#}
            }
             {%- if not loop.last -%}
                , {# -#}
             {% endif %}
          {%- endfor %}]'
        >
        </div>
      </div>
    {% endif -%}
  {% endif -%}
{%- endmacro -%} {#- db_node_map -#}

{%- macro e_type_object (db_type, o) -%}
  {%- set TN      = db_type.Div_Name %}
  {%- set actions = db_type.view_actions %}
  {%- set fields  = db_type.view_fields %}
  {%- set name    = db_type.view_name_instance (o) %}
  {%- set tn      = db_type.div_name %}
  {%- set user    = db_type.user_restriction %}
  {%- set td_kw   = GTW.dict
      ( class     = db_type.tr_instance_css_class (o)
      , id        = "%s-%s" % (tn, o.pid)
      )
  %}
  {%- if db_type.is_partial %}
    {%- set c_db_type = db_type [o.type_name] %}
    {%- do td_kw.update ({ "data-etn" : c_db_type.name }) %}
  {% endif -%}
  <tr{{ td_kw|xmlattr }}>
    {%- for f in fields %}
      <td{{ GTW.filtered_dict (class = f.css_class_dyn (o, None))|xmlattr }}>
        {{- f.as_html (o, None) -}}
      </td>
    {% endfor -%}
    {%- if actions %}
      <td class="action">
        {%- for a in actions -%}
          {{- action_button
              ( "#" + a.name, a.icon
              , GTW._T (a.msg) % GTW.dict (tn = TN, obj = name)
              )
          -}}
        {%- endfor -%}
      </td>
    {% endif -%}
  </tr>
{%- endmacro -%} {#- e_type_object -#}

{%- macro e_type_table (db_type) -%}
  {%- set TN      = db_type.Div_Name %}
  {%- set actions = db_type.view_actions %}
  {%- set create  = db_type.create_action %}
  {%- set fields  = db_type.view_fields %}
  {%- set objects = db_type.objects %}
  {%- set tn      = db_type.div_name %}
  {%- set user    = db_type.user_restriction %}
  <h2>
    {{- db_type.view_title -}}
    {%- if create and objects and GTW.len (objects) > 10 %}
      {%- if not db_type.is_partial  %}
        {{- action_button_create
            ( db_type, create
            , title = (GTW._T (create.msg) % GTW.dict (tn = TN, obj = "")).strip ()
            )
        -}}
      {% endif -%}
    {% endif -%}
  </h2>
  <table id="{{ tn }}-table" class="{{ tn }}-table pure-table pure-table-bordered">
    <thead>
      <tr>
        {%- for f in fields %}
          {%- set css_class =
                 ("class=\"%s\" " % (f.css_class, )) if f.css_class else ""
          -%}
          <th {{ css_class }}scope="col" title="{{ f.description }}">
            {{- f.ui_name -}}
          </th>
        {% endfor -%}
        {%- if actions %}
          <th class="action">{{- GTW._T ("Action") -}}</th>
        {% endif -%}
      </tr>
    </thead>
    <tbody>
      {%- if objects %}
        {%- for o in objects %}
          {{ e_type_object (db_type, o) }}
        {% endfor -%}
      {% endif -%}
      {%- if create %}
        <tr>
          <td colspan="{{ GTW.len (fields) + GTW.bool (actions) }}">
            {{- action_button_create
                ( db_type, create
                , text = (GTW._T (create.msg) % GTW.dict (tn = TN, obj = "")).strip ()
                )
            -}}
          </td>
        </tr>
      {% endif -%}
    </tbody>
  </table>
{%- endmacro -%} {#- e_type_table -#}

{%- macro logout_widget (page) -%}
  {%- set Auth     = page.SC.Auth -%}
  {%- set action   = Auth.href_logout -%}
  <form action="{{ action }}" {# -#}
        class="Auth logout pure-form" {# -#}
        method="post" {# -#}
  >
    <button class="logout pure-button" {# -#}
      name="submit"
      title="{{ GTW._T ("Logout %s") % (page.user.person.FO, ) }}" {# -#}
      type="submit" {# -#}
    >{# -#}
      <i class="fa fa-sign-out"></i> {{ GTW._T ("Logout") -}}
    </button>{# -#}
  </form>
{%- endmacro -%} {#- logout_widget -#}

{%- macro nav_menu_dashboard (page) -%}
  {%- if page.request.user %}
    <a href="/dashboard" class="dashboard pure-menu-heading">
      FF Dashboard
    </a>
  {%- else %}
    <b class="dashboard pure-menu-heading">
      FF Dashboard
    </b>
  {% endif -%}
{%- endmacro -%} {#- nav_menu_dashboard -#}

{%- macro nav_menu_links (page) -%}
  {%- set caller = kwargs.pop ("caller", None) -%}
  {%- set admin  = page.SC.Admin %}
  {%- set et_doc = page.SC.ET_Doc %}
  {%- set rf_api = page.SC.RESTful %}
  <li><a href="/about">{{ GTW._T ("About") }}</a></li>
  {%- if admin and page.allow (admin, page.request.user) %}
    <li><a href="{{ admin.abs_href }}">{{ GTW._T ("Admin") }}</a></li>
  {% endif -%}
  {%- if et_doc or rf_api %}
    <li class="pure-menu-auto-open">
      <a>{{ GTW._T ("Development") }}</a>
      <ul>
        {%- if et_doc %}
          <li>
            <a href="{{ et_doc.abs_href }}/CNDB">
              {{ GTW._T ("Documentation") }}
            </a>
          </li>
        {% endif -%}
        {%- if rf_api %}
          <li>
            <a href="{{ rf_api.abs_href }}">
              {{ GTW._T ("RESTful API") }}
            </a>
          </li>
        {% endif -%}
        {%- if page.request.user %}
          <li><a href="#">API Key</a></li>
        {% endif -%}
      </ul>
    </li>
  {% endif -%}
  {%- if caller %}
    {{- caller () -}}
  {%- endif -%}
{%- endmacro -%} {#- nav_menu_links -#}

{%- macro nav_menu_person (page) -%}
  {%- set caller = kwargs.pop ("caller", None) -%}
  {%- set db_page = page.SC.DB %}
  {%- set href_login = page.SC.Auth.href_login %}
  {%- if caller %}
    {{- caller () -}}
  {%- endif -%}
  {%- if page.request.user %}
    {{ action_button
        (db_page.db_user.abs_href, "cog", GTW._T ("Personal settings"), "settings")
    -}}
    {{ logout_widget (page) }}
  {%- elif page.abs_href != href_login %}
    <a href="{{ href_login }}" class="login pure-button">
      <i class="fa fa-sign-in"></i> {{ GTW._T ("Login") -}}
    </a>
  {%- else %}
    <b class="login">
      <i class="fa fa-sign-in"></i> {{ GTW._T ("Login") -}}
    </b>
  {% endif -%}
{%- endmacro -%} {#- nav_menu_person -#}

{%- macro th_number_of (left, right) -%}
  {%- set title = GTW._T
        ("Number of %s belonging to %s") % (right.ui_name_T, left.ui_name_T)
  -%}
  <th title = "{{ title }}">#</th>
{%- endmacro -%} {#- th_number_of -#}

{#- __END__ jinja template: html/dashboard/app.m.jnj -#}
